#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 5000

frontend stats
    bind *:8404
    stats enable
    stats uri /
    stats refresh 10s

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
{% for port in ports %}
listen  haproxy_postgres_{{ port }}
    bind *:{{ port }}
    mode tcp
    timeout client  10800s
    timeout server  10800s
    tcp-check expect string master\ is\ running
    balance leastconn
    option tcp-check
    option allbackups
    default-server port 9201 inter 2s downinter 5s rise 3 fall 2 slowstart 60s maxconn 1000 maxqueue 1000 weight 100
{% for group in groups['database'] %}
    server {{ group|replace('.','_',4) }} {{ group }}:5432 check
{% endfor %}
{% for group in groups['database_replica'] %}
    server {{ group|replace('.','_',4) }} {{ group }}:5432 check
{% endfor %}

{% endfor %}