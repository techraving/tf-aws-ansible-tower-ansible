---

- name: Update the hostname
  command: "hostnamectl set-hostname {{ inventory_hostname }}"
  changed_when: false

# - name: Remove epel-release
#   yum:
#     name: epel-release
#     state: absent

# - name: get epel-release rpm
#   uri:
#     url: http://10.0.0.139/repository/RPMs/epel-release/epel-release-latest-7.noarch.rpm
#     user: 'admin'
#     password: "K3l4ndr41t01!"
#     force_basic_auth: yes
#     dest: ~/epel-release-latest-7.noarch.rpm
#   register: result
#   retries: 10
#   delay: 30
#   until: result is succeeded
#   when:
#     - ansible_os_family == 'RedHat'
#     - ansible_distribution != 'RedHat'

# - name: Copy the binary
#   copy:
#     src: files/epel-release-latest-7.noarch.rpm
#     dest: /tmp/epel-release-latest-7.noarch.rpm
#   when:
#     - ansible_os_family == 'RedHat'
#     - ansible_distribution != 'RedHat'

# - name: Install epel-release rpm
#   yum:
#     name: /tmp/epel-release-latest-7.noarch.rpm
#   register: result
#   when:
#     - ansible_os_family == 'RedHat'
#     - ansible_distribution != 'RedHat'

- name: Install epel-release package
  yum:
    name: epel-release
    state: latest
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution != 'RedHat'

- name: Update kernel
  yum:
    name: kernel
    state: latest
  register: kernel_changed

- name: Reboot system on Kernel Update
  shell: sleep 2 && reboot "Ansible kernel update triggered"
  async: 1
  poll: 0
  ignore_errors: true
  when:
    - kernel_changed.changed

- name: waiting for server to come back
  local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=30 timeout=220
  become: false
  when:
    - kernel_changed.changed

- name: Update all packages
  yum:
    name: "*"
    state: latest
  register: updated

- name: install basic packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - wget
      - vim
      - screen
      - bash-completion
      - firewalld
      - unzip